# This workflow builds binary wheels for indexed_gzip,
# for different platforms and different Python versions,
# using cibuildwheel. It is triggered manually.

on:
  workflow_dispatch

defaults:
  run:
    shell: bash

jobs:

  build_sdist:
    name:    Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.11"

      - name: Build sdist
        run:  python setup.py sdist

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.tar.gz

  build_macos_wheels:
    name: Build macos wheels
    runs-on: macos-latest

    env:
      PLATFORM:         ${{ matrix.os }}
      CIBW_ARCHS_MACOS: "x86_64 arm64 universal2"

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.11"

      - name: Build wheels
        run:  bash ./.ci/build_wheels.sh

      - uses: actions/upload-artifact@v4
        with:
          name: macos_wheels
          path: ./dist/*.whl

  build_windows_wheels:
    name: Build Windows ${{ matrix.arch }} wheels
    runs-on: windows-latest

    strategy:
      matrix:
        arch: ["AMD64", "x86"]

    env:
      PLATFORM:           windows-latest
      CIBW_ARCHS_WINDOWS: ${{ matrix.arch }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.11"
      - name: Download zlib
        run:  bash ./.ci/download_zlib.sh
      - name: Build wheels
        run:  bash ./.ci/build_wheels.sh
      - uses: actions/upload-artifact@v4
        with:
          name: windows_${{ matrix.arch }}_wheels
          path: ./dist/*.whl

  build_linux_wheels:
    # Typo left in for hilarity
    name: Build Linux ${{ matrix.arch }} eels
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: ["x86_64", "i686", "aarch64"]

    env:
      PLATFORM:         ubuntu-latest
      CIBW_ARCHS_LINUX: ${{ matrix.arch }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.11"
      - name: Set up QEMU for emulated (e.g. ARM) builds
        if:   ${{ matrix.arch == 'aarch64' }}
        uses: docker/setup-qemu-action@v3
      - name: Build wheels
        run:  bash ./.ci/build_wheels.sh
      - uses: actions/upload-artifact@v4
        with:
          name: linux_${{ matrix.arch }}_wheels
          path: ./dist/*.whl
